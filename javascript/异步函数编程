工作过程中难免会遇到这样的异步函数编程问题。

首先解释什么是异步函数编程：
举个例子，有两个函数 f1和f2, f2依赖f1返回的变量，这种形式的问题成为异步编程

以上均是个人理解

看了阮老师的解决方案，简单说一下

1. 利用回调函数

function f1(callback) {
  setTimeout(function() {
    // f1代码
    callback();
  }, 1000)
}

function f2() {
  console.log('f2')
}

调用的时候就可以这么写:
f1(f2)

这种解决方法应该是我们最经常用的，但是这种方法不太直观，代码也比较混乱，我就亲身经历过，函数中套了函数的感觉，并且那个函数的代码非常大，使得整个页面都非常臃肿
一般学过ES6的话，都会采用Promise对象来解决，不过也可以使用Generator函数或者async函数来解决，在ES6笔记中会介绍

2. 事件监听

我在工作中没有运用过这种方法，不顾觉得和第一种方法差不多，举例子(jquery写法)：

function f1() {
  setTimeout(function() {
    f1.trigger('done')
  }, 1000)
}

function f2() {
  console.log('f2')
}

f1();

f1.on('done', f2)

