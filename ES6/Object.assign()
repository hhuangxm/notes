
原来用过这个方法，所以加深一下印象

//作用
Object.assign()方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。

//code
let target = {};

let source1 = {a: 1, b: 2};
let source2 = {c: 3, d: 4};

Object.assign(target, source1, source2);

Object.assign的第一个参数是目标对象，后面的参数都是源对象。

注意点，Object.assign实行的是浅拷贝，不是深拷贝

如果某个源对象的属性值是一个对象，那么目标对象拷贝得到的是这个对象的引用。

同名处理：

如果源对象的属性名和目标对象的属性名一致，源对象的属性会把目标对象的属性替换掉，原来就中过这个坑，那时候还不明白怎么回事呢
请小心谨慎。


看了书才明白，我只知道Object.assign是用来合并对象的，其实还有很多用途咧！简单介绍一下

（1）为对象添加属性（完全想象不到的感觉）
//code
class Point {
  constructor(x,y) {
    Object.assign(this, {x,y});
  }
}

（2）为对象添加方法
//code
Object.assign(SomeClass.Prototype, 
  someMethod: function() {},
  otherMethod: fucntion() {}
)

（3）克隆对象
//code
function(orgin) {
  return Object.assign({}, orgin);
}

(4) 合并多个对象
这个就是上面一大推说的，就不多说了，克隆对象也是用了这个属性来着

（5）为属性指定默认值
这个是利用了合并对象的时候，存在同名属性，源对象覆盖了目标对象中的属性实现的。
需要注意的是，源对象中的属性值是对象的问题
//code
const DEFAULTS = {
  logLevel: 0,
  outputFormat: 'html'
};

function processContent(options) {
  options = Object.assign({}, DEFAULTS, options);
  console.log(options);
  // ...
}
