

rest参数，我基本不了解，足以见得，我还是相当的菜的。

谈谈这个参数之前，先聊聊自己。

刚部门老大刚找去谈涨工资的事情，本来就是很高兴的事情是吧，但是总还是觉得不太高兴，一部分原因是自己，主要在于自己吧，另一个原因在于所属的团队。
小领导要离职了，这个事情可以说是第二遍了，刚进公司的时候，小领导就是他，后来因为某些事情，我们换了一个领导，后来我又回到了他的团队，而现在他就要走了。
以后没机会了，不说利益方面的事情，这些没有意义，单单说对人的问题，我想，他对我们还是很好的，能叫上我的也都会叫上我，真心舍不得。

我同学在深圳，进了一个公司，部门老大特别抠，单单说请假这方面吧，请半天假老大都不高兴，这也是没谁了。

自身的原因还是自己不够努力，这一年怎么过来的自己也清除，别人忙的不可开交，可是我却帮不上忙，简直都没法原谅自己。

不管怎么样，还是不可放弃自己，放弃未来，现在改变还不晚。

想想这些，午睡就无法入睡了，因此还不如多学点东西，多看点书。

言归正传，谈谈我们的rest参数

ES6引入rest 参数（形式为“...变量名”），用于获取函数的多余参数。

简单一句话，明白了rest参数的作用是获取函数的多余参数。

rest 参数搭配的变量是一个数组，该变量将多余的参数放入数组中。

这句话感觉比较难理解，上一段代码

function add(...values) {
  let sum = 0;
  for(val in values) {
    sum += val;
  }
  return sum;
}

add(2,3,4,5); //14

最终返回的结果为14，可以看到上面的add函数中有一个循环，说明values是一个数组，但是调用add函数的时候，参数有4个，说明这四个函数都为放到了values数组中。

和rest参数比较像的是arguments参数，也可以接收多个参数，上一段代码：

// arguments变量的写法
function sortNumbers() {
  return Array.prototype.slice.call(arguments).sort();
}

// rest参数的写法
const sortNumbers = (...numbers) => numbers.sort();

两者的区别：
1. rest参数只包括那些没有给出名称的参数（就是对应不上之后，多出来的参数），而arguments参数包含所有参数
2. arguments不是真正的array,而rest参数是array的实例，可以直接调用sort(), pop(), map(), forEach()等方法
3. arguments对象拥有一些自己额外的功能。




